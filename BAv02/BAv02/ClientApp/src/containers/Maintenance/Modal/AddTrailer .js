import React from "react";
import axios from "axios";
import {
  Button,
  Modal,
  ModalHeader,
  ModalBody,
  ModalFooter,
  FormGroup,
  Col,
  Label,
  Input,
  Row,
  Form,
} from "reactstrap";
import PropTypes from "prop-types";
import Select from "./../../../components/Select";
import mayus from "./../../../services/mayus";
import DatePicker from "./../../../components/DatePicker";
var id = JSON.parse(localStorage.getItem("user")).Id;

class AddTrailer extends React.Component {
  constructor(props) {
    super(props);
    this.state = {
      PlateState: undefined,
      TrailerType: undefined,
      Make: undefined,
      Condition: undefined,
      vin: "",
      vinSearch: "",
      vinMessage: "",
      Year: "",
      Hazmat: "",
      haz: false,
    };
    this.onChange = this.onChange.bind(this);
    this.onChange = this.onChange.bind(this);
    this.handleSubmit = this.handleSubmit.bind(this);
    this.handleBlur = this.handleBlur.bind(this);
    this.onClose = this.onClose.bind(this);
    this.handleSearchVIN = this.handleSearchVIN.bind(this);
    this.getSearchVIN = this.getSearchVIN.bind(this);
    this.vinTruckCheck = this.vinTruckCheck.bind(this);
  }

  onChange() {
    this.setState({ haz: !this.state.NoAccident });
  }

  UNSAFE_componentWillMount() {
    this.setState({
      vin: "",
      vinSearch: "",
      vinMessage: "",
      Year: "",
      PlateState: undefined,
      TrailerType: undefined,
      Make: undefined,
      Hazmat: undefined,
      Condition: undefined,
    });
  }
  onChange(event) {
    const { name, value } = event.target;
    this.setState({ [name]: value });
  }

  onClose() {
    this.setState({
      PlateState: 0,
      TrailerType: 0,
      vinSearch: "",
      vinMessage: "",
    });

    this.state.vin = "";

    this.props.dataByVin.Make = "";
    this.props.dataByVin.Hazmat = "";
    this.props.dataByVin.Model = "";
    this.props.dataByVin.Year = "";

    this.props.toggle();
  }

  handleSearchVIN = (event) => {
    this.setState({
      vin: event.target.value,
    });
    this.getSearchVIN(event.target.value);
    //getDataTrailerByVinthis.vinTruckCheck();
  };

  getSearchVIN(vin) {
    let url = "api/Trailers/getSearchVIN";
    axios
      .get(url, {
        params: { vin: vin, idCompany: localStorage.getItem("idCompany") },
      })
      .then((response) => response.data)
      .then((response) => {
        if (response.length > 0) {
          this.setState({
            vinMessage: "VIN Number already registered within this company",
          });
        } else {
          //this.vinTruckCheck();
          this.setState({ vinMessage: null });
        }
        this.setState({
          vinSearch: response.length,
        });
      })
      .catch((error) => console.log(error));
  }

  //TODO: Check if VIN number is not TRAILER and viceversa
  //Add truck/trailer by VIN autogenerated
  //or manual input
  vinTruckCheck() {
    var vinChk = this.props.dataByVin.VehicleType;
    if (vinChk === undefined) {
      setTimeout(function () { }, 1500);
    } else {
      if (
        vinChk.trim() === "TRUCK" &&
        (this.vinMessage !== undefined || this.vinMessage !== null)
      ) {
        this.setState({
          vinMessage: this.vinMessage + "VIN Number is not a TRAILER.",
        });
      } else {
        this.setState({ vinMessage: null });
      }
    }
  }

  handleSubmit(e) {
    e.preventDefault();
    var id = JSON.parse(localStorage.getItem("user")).Id;
    var form = new FormData(e.target);
    form.append("idu", id);
    form.append("Year", this.props.dataByVin.Year);
    form.append("FuelType", this.props.dataByVin.FuelType);
    this.props.OnSubmit(form);

    this.setState({
      PlateState: 0,
      TrailerType: 0,
      vinSearch: "",
      vinMessage: "",
    });

    this.state.vin = "";

    this.props.dataByVin.Make = "";
    this.props.dataByVin.Hazmat = "";
    this.props.dataByVin.Model = "";
    this.props.dataByVin.Year = "";
  }

  handleBlur() {
    if (this.props.modal === false) {
      this.setState({
        PlateState: undefined,
        TrailerType: undefined,
        Make: undefined,
        Hazmat: undefined,
      });
    }
  }

  render() {
    return (
      <Modal isOpen={this.props.modal} className={"modal-lg "}>
        <ModalHeader name="modal2" toggle={this.onClose}>
          ADD TRAILER
        </ModalHeader>
        <Form onSubmit={this.handleSubmit}>
          <ModalBody>
            <Row>
              <Col md="6">
                <FormGroup>
                  <Label htmlFor="text-input">VIN Number</Label>
                  <Input
                    type="text"
                    className="form-control"
                    id="vin"
                    name="Vin"
                    value={this.state.vin}
                    onChange={this.handleSearchVIN}
                    onKeyUp={mayus}
                    maxLength="20"
                    onInput={(e) => {
                      this.props.onBlur(e.target.value, "Trailer", id);
                      this.props.getVin(e.target.value);
                      //this.vinTruckCheck();
                    }}
                    autoComplete="off"
                    required
                  ></Input>
                  <Label style={{ color: "red" }}>
                    {this.state.vinMessage}
                  </Label>
                </FormGroup>
              </Col>
              <Col md="6">
                <FormGroup>
                  <Label htmlFor="text-input">Trailer Number</Label>
                  <input
                    type="text"
                    className="form-control"
                    id="tnumber"
                    name="TrailerNumber"
                    onKeyUp={mayus}
                    maxLength="20"
                    required
                  />
                </FormGroup>
              </Col>
            </Row>
            <Row>
              <Col md="4">
                <FormGroup>
                  <Label htmlFor="text-input">Make</Label>
                  <Input
                    type="text"
                    id="Make"
                    name="Make"
                    defaultValue={this.props.dataByVin.Make}
                    maxLength="20"
                    required
                  />
                </FormGroup>
              </Col>
              <Col md="4">
                <FormGroup>
                  <Label htmlFor="text-input">Model</Label>
                  <Input
                    type="text"
                    id="model"
                    name="Model"
                    defaultValue={this.props.dataByVin.Model}
                    maxLength="20"
                    required
                  />
                </FormGroup>
              </Col>
              <Col md="4">
                <FormGroup>
                  <Label htmlFor="text-input">Year</Label>
                  <Input
                    type="text"
                    id="year"
                    name="Year"
                    defaultValue={this.props.dataByVin.Year}
                    maxLength="4"
                    required
                  />
                </FormGroup>
              </Col>
            </Row>
            <Row>
              <Col md="4">
                <FormGroup>
                  <Label htmlFor="text-input">Fuel Type</Label>
                  <select
                    name="FuelType"
                    className="form-control"
                    onChange={this.onChange}
                    required
                  >
                    <option value="">SELECT</option>
                    <option value="GASOLINE">GASOLINE</option>
                    <option value="DIESEL">DIESEL</option>
                    <option value="BATTERY ELECTRIC">BATTERY ELECTRIC</option>
                    <option value="ETHANOL">ETHANOL</option>
                    <option value="FUEL CELL">FUEL CELL</option>
                    <option value="HYBRID GAS">HYBRID GAS</option>
                    <option value="PLUG-IN HYBRID">PLUG-IN HYBRID</option>
                    <option value="NATURAL GAS">NATURAL GAS</option>
                    <option value="OTHER">OTHER</option>
                  </select>
                </FormGroup>
              </Col>
              <Col md="4">
                <FormGroup>
                  <Label htmlFor="text-input">Trailer Type</Label>
                  <select
                    name="TrailerType"
                    className="form-control"
                    onChange={this.onChange}
                    value={
                      this.state.TrailerType !== undefined
                        ? this.state.TrailerType
                        : this.props.dataByVin.TrailerType
                    }
                    required
                  >
                    <option value="">SELECT</option>
                    <option value="Flat Bed 53">Flat Bed 53"</option>
                    <option value="Flat Bed 48">Flat Bed 48"</option>
                    <option value="Expandable Flat Bed">
                      Expandable Flat Bed
                    </option>
                    <option value="Drop Deck">Drop Deck</option>
                    <option value="Expandable Drop Deck">
                      Expandable Drop Deck
                    </option>
                    <option value="Auto Hauler">Auto Hauler</option>
                    <option value="Dry Freight 53">Dry Freight 53"</option>
                    <option value="Dry Freight 48">Dry Freight 48"</option>
                    <option value="Low Boy">Low Boy</option>
                    <option value="Tank Trailer">Tank Trailer</option>
                    <option value="Tank Trailer MC - 306">
                      Tank Trailer MC - 306
                    </option>
                    <option value="Tank Trailer MC - 307">
                      Tank Trailer MC - 307
                    </option>
                    <option value="Tank Trailer MC - 312">
                      Tank Trailer MC - 312
                    </option>
                    <option value="Tank Trailer MC - 331">
                      Tank Trailer MC - 331
                    </option>
                    <option value="Tank Trailer MC - 338">
                      Tank Trailer MC - 338
                    </option>
                    <option value="Refrigerated Dry Trailer">
                      Refrigerated Dry Trailer
                    </option>
                    <option value="Pole Trailer">Pole Trailer</option>
                    <option value="Step Deck Trailer">Step Deck Trailer</option>
                    <option value="Conestaga Trailer">Conestaga Trailer</option>
                    <option value="Container 53">Container 53"</option>
                    <option value="Container 48">Container 48"</option>
                  </select>
                </FormGroup>
              </Col>
              <Col md="4">
                <FormGroup>
                  <Label htmlFor="text-input">Ownership Status</Label>
                  <select
                    name="Ownership"
                    className="form-control"
                    onChange={this.onChange}
                    value={this.state.Condition}
                    required
                  >
                    <option value="">SELECT</option>
                    <option value="Leased">Leased</option>
                    <option value="Owned">Owned</option>
                    <option value="Interchange">Interchange</option>
                    <option value="Intermodal">Intermodal</option>
                    <option value="Term Leased">Term Leased </option>
                    <option value="Trip Leased">Trip Leased</option>
                  </select>
                </FormGroup>
              </Col>
            </Row>
            <Row>
              <Col md="6">
                <FormGroup>
                  <Label htmlFor="text-input">Plate</Label>
                  <input
                    type="text"
                    className="form-control"
                    id="plate"
                    name="Plate"
                    onKeyUp={mayus}
                    maxLength="15"
                    required
                  />
                </FormGroup>
              </Col>
              <Col md="6">
                <FormGroup>
                  <Label htmlFor="text-input">Plate State</Label>
                  <Select
                    name="PlateState"
                    className="form-control"
                    onChange={this.onChange}
                    options={this.props.states}
                    value={this.state.PlateState}
                  />
                </FormGroup>
              </Col>
            </Row>
            <Row>
              <Col md="6">
                <FormGroup>
                  <DatePicker
                    id="PlateExp"
                    name="PlateExpiration"
                    labelText="Expiration Date"
                  />
                </FormGroup>
              </Col>
              <Col md="6" style={{ alignSelf: "Self-end" }}>
                <FormGroup>
                  <input
                    id="Hazmat"
                    type="checkbox"
                    name="Hazmat"
                    value="true"
                    onChange={this.onChange}
                  />
                  <label id = "Hazmat" htmlFor="Hazmat" style={{ fontSize: "16px" }}>
                    Hazmat Trailer
                  </label>
                </FormGroup>
              </Col>
            </Row>
          </ModalBody>
          <ModalFooter>
            <Button
              type="submit"
              color="primary"
              disabled={this.state.vinMessage}
            >
              Save
            </Button>{" "}
            {this.props.isLoading ? (
              <img
                style={{
                  width: "140px",
                  position: "absolute",
                  marginTop: "0px",
                  right: "40%",
                }}
                src="../../assets/img/icons/loading2.gif"
                alt="loading"
              />
            ) : (
              <div />
            )}
            <Button type="button" color="danger" onClick={this.onClose}>
              Cancel
            </Button>
          </ModalFooter>
        </Form>
      </Modal>
    );
  }
}

AddTrailer.propTypes = {
  OnSubmit: PropTypes.func,
  onBlur: PropTypes.func,
  toggle: PropTypes.func,
};

export default AddTrailer;
